/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eStoreSearch;
import javax.swing.JFrame;
import javax.swing.JButton;
import java.awt.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.stream.Collectors;
import java.util.StringTokenizer;
import java.util.Scanner;
import java.util.ArrayList;
import java.io.*;


public class EStoreSearch {
  public static final int WIDTH = 300;
  public static final int HEIGHT = 200;
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
      ArrayList<Product> listofproducts = new ArrayList<Product>();
      HashMap <String,ArrayList<Integer>> hashString = new HashMap<String,ArrayList<Integer>>();
      int x;
      if (args.length==1){
        x=loadInfo(listofproducts , args[0]); //load info from file
        FirstWindow w = new FirstWindow(listofproducts,hashString,args[0]);
        w.setVisible(true);
      }
      else{
        FirstWindow w = new FirstWindow(listofproducts,hashString,"");
        w.setVisible(true);
      }
      hashString = initalizeHashMap(listofproducts);
    }


    /**This will update the hashmap if a new product is added*/
    public static HashMap<String,ArrayList<Integer>> initalizeHashMap(ArrayList<Product> listofproducts){
      HashMap <String,ArrayList<Integer>> hashString = new HashMap<String,ArrayList<Integer>>();
      for (int i=0;i<listofproducts.size();i++){ // loop through array size
        StringTokenizer keyWords = new StringTokenizer(listofproducts.get(i).getDescription()," "); //tokenize inputs on spaces
        while (keyWords.hasMoreTokens()){ //go through all keywords
          String nextToken = keyWords.nextToken().toLowerCase(); //make keyword lower case
          hashString.putIfAbsent(nextToken, new ArrayList <Integer>()); //put if absent into hashmap
          hashString.get(nextToken).add(i); //add the number at which the word was found into that words corresponding placement in the hashmap
        }
      }
      return hashString; //idk why I have to return it as the variable is publicly declared in this class but yeah it doesnt work if I dont
    }

    /**this method will load the information from a file*/
    public static int loadInfo(ArrayList <Product> listofproducts,String file){
      try{ //try and catch is from "Lab Four" of CIS*2430*02
        Scanner scanner = new Scanner (new File (file));
        while (scanner.hasNextLine()){ //if fie contains something
          String nextLine = scanner.nextLine();
          if (nextLine.equals("type = \"book\"")){ //if its a book
            String productID = scanner.nextLine(); //make strings for each attribute
            String description = scanner.nextLine();
            String price = scanner.nextLine();
            String year = scanner.nextLine();
            String author = scanner.nextLine();
            String publisher = scanner.nextLine();
            String [] idSplit = productID.split("\""); //split them at " to get values inside
            String [] dSplit = description.split("\"");
            String [] pSplit = price.split("\"");
            String [] ySplit = year.split("\"");
            String [] aSplit = author.split("\"");
            String [] pubSplit = publisher.split("\"");
            String authorString="";
            String priceString="";
            String pubString="";
            if (aSplit.length==1){ //if an optional value doesnt have anything in it
              authorString = ""; //set equal to blank
            }
            else { //if it does contain something then procede like normal
              authorString = aSplit[1];
            }
            if (pSplit.length==1){ //same goes for these ones
              priceString = "";
            }
            else {
              priceString = pSplit[1];
            }
            if (pubSplit.length==1){
              pubString = "";
            }
            else {
              authorString = pubSplit[1];
            }
            try{
              Book newBook = new Book(new Book(idSplit[1],dSplit[1],priceString,ySplit[1],authorString, pubString)); //create a new book witht hese attributes
              listofproducts.add(newBook); //add that book to the list
            }
            catch(Exception e){

            }
          }
          else if (nextLine.equals("type = \"electronic\"")){ //exact same as book. EXACT. (except publsiher/author which is replaced by maker)
            String productID = scanner.nextLine();
            String description = scanner.nextLine();
            String price = scanner.nextLine();
            String year = scanner.nextLine();
            String maker = scanner.nextLine();
            String [] idSplit = productID.split("\"");
            String [] dSplit = description.split("\"");
            String [] pSplit = price.split("\"");
            String [] ySplit = year.split("\"");
            String [] mSplit = maker.split("\"");
            String priceString="";
            String makerString="";
            if (mSplit.length==1){
              makerString = "";
            }
            else {
              makerString = mSplit[1];
            }
            if (pSplit.length==1){
              priceString = "";
            }
            else {
              priceString = pSplit[1];
            }
            try{
              Product newElectronic = new Electronic(idSplit[1],dSplit[1],priceString,ySplit[1],makerString);
              listofproducts.add(newElectronic);
            }
            catch(Exception e){
              System.out.println("Error loading info from file");
            }
          }
        }
      }
      catch (FileNotFoundException e){ //check for erros. aka file is not found
        System.out.println("Error file not found");
        return -1;
      }
      return 1;
    }
}
